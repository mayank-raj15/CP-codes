#include <iostream>
#include <bitset>
using namespace std;
int main() {
    bitset<16> s1;
    cout<<"set1: "<<s1<<"\n";
    bitset<16> s2(16);          
    bitset<16> s3(0xfa2);       //we can initialize with hex values too
    bitset<16> s4("01010111010");   //initialising as string from last and remaining positions are kept at 0
    cout<<"set2: "<<s2<<"\n";
    cout<<"set3: "<<s3<<"\n";
    cout<<"set4: "<<s4<<"\n";
    cout<<"set1: "<<s1.set()<<"\n";        //it sets all the bits
    cout<<"set2: "<<s2.set(2)<<"\n";       //it sets bit at pos 2 from left, starting from 0
    cout<<"set1: "<<s1.reset()<<"\n";      //it resets all the bits
    cout<<"set2: "<<s2.reset(2)<<"\n";     //it resets the bit at position 2 from left
    cout<<"set3: "<<s3.flip(1)<<"\n";       //it toggles the bit at pos 1, if 0, then change to 1, else if 1, change to 0
    cout<<s1[1]<<"\n";   //print the bit at a specific pos
    s2[1] = s1[1];      //copy the bit of a specific pos
    cout<<"set2: "<<s2<<"\n";   
    cout<<s3.count()<<"\n";   //it counts the no. of 1s in the set
    cout<<s1.size()<<"\n";      //it returns the no. of bits in the set
    for(size_t i=0; i<s3.size(); i++)  
        cout<<s3.test(i)<<" ";      //test function checks whether the bit is 1 or not
    cout<<"\n";
    cout<<s2.any()<<" ";        //it checks if at least 1 bit is 1
    cout<<s1.none()<<" ";       //it checks if none of the bit is 1
    cout<<s3.all()<<" ";        //it checks if all bits are 1
    return 0;
}







